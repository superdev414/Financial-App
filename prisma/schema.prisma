// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// One account has only one portfolio, and one watchlist
model Account{
  id String @id @default(uuid())
  accountBalance Float
  accountValue Float

  portfolio Portfolio?
  watchlist Watchlist?
  cards Card[]
}

// A Portfolio can have many companies, 
model Portfolio {
  id String @id @default(uuid())
  portfolioVal Float 

  companies Portfolio_Company[]

  account Account @relation(fields: [accountId], references: [id],onDelete:  Cascade)
  accountId String @unique
}

// A watchlist can have many companies
model Watchlist {
  id String @id @default(uuid())
  name String

  companies Watchlist_Company[]

  account Account @relation(fields: [accountId], references: [id])
  accountId String @unique
 
}

// watchlist_companies: many-to-many relation
model Watchlist_Company {
  watchlist Watchlist @relation(fields: [watchlistId],references: [id])
  watchlistId String
  company  Company @relation(fields: [companyId], references:[id])
  companyId String
  symbol String
  @@id([watchlistId,companyId])
}

model Card {
  id String @id @default(uuid())
  value Float
  holderName String
  expiration String
  cardDigits String @unique
  type String

  account Account @relation(fields: [accountId],references: [id])
  accountId String
}

// portfolio_company: many-to-many relation
model Portfolio_Company {
  portfolio Portfolio @relation(fields: [portfolioId],references: [id])
  portfolioId String
  company  Company @relation(fields: [companyId], references:[id])
  companyId String
  symbol String
  shares Float
  @@id([portfolioId,companyId])
} 

// Company model that holds all data for stock information
model Company {
  id String @id @default(uuid())
  symbol String @unique
  price Float 
  yahooMarketV2Data Json
  yahooStockV2Summary Json
  resources Resource?
  
  watchlists Watchlist_Company[]
  portfolios  Portfolio_Company[]
}
model Transaction {
  id String @id @default(uuid())

}

model Ticker {
  id String @id @default(uuid())
  symbol String @unique
}

model Resource {
  symbol String @unique
  logoImg String
  productImg String 

  company Company @relation(fields: [symbol], references: [symbol])

}
model Product {
  id String @id @default(uuid())
  symbol String @unique
  name String
  imgSrc String
}

// Chatbot models
model ChatBot {
  id String @id @default(uuid())
  messages Message[]
}

enum Role {
  system
  user
}
model Message {
  id String @id @default(uuid())
  role Role
  content String @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  chatBot  ChatBot @relation(fields: [id], references: [id])
}

model AllTicker {
  id String @id @default(uuid())
  symbol String @unique
}

